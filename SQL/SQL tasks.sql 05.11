/*TASK 1
Ïîäñ÷èòàéòå îáùåå êîëè÷åñòâî çàêàçîâ è ñðåäíþþ ñóììó çàêàçà ïî êàæäîìó ãîäó. Âêëþ÷èòå òîëüêî òå ãîäû, ãäå ñðåäíÿÿ ñóììà çàêàçà ïðåâûøàåò 2000. 
Äîáàâüòå êàòåãîðèþ: "High Demand" äëÿ ëåò ñ áîëåå ÷åì 500 çàêàçàìè, "Medium Demand" äëÿ ëåò ñ 300-500 çàêàçàìè è "Low Demand" äëÿ îñòàëüíûõ. 
Óêàæèòå äàòó, êîëè÷åñòâî çàêàçîâ, ñðåäíþþ ñóììó çàêàçà è êàòåãîðèþ.
Èñïîëüçóéòå òàáëèöó Sales.SalesOrderHeader

SELECT YEAR(sso.OrderDate) AS Year
	  , COUNT(sso.SalesOrderID) AS OderAmount
	  , AVG(sso.TotalDue) AS AverageSum
	  , CASE 
	    WHEN COUNT(sso.SalesOrderID) > 500
		THEN 'High Demand'
		WHEN COUNT(sso.SalesOrderID) BETWEEN 300 AND 500 
		THEN 'Medium Demand'
		ELSE 'Low Demand'
		END AS Category
FROM Sales.SalesOrderHeader sso
GROUP BY YEAR(sso.OrderDate)
HAVING AVG(sso.TotalDue) > 2000
*/

/*Task 2 
Íàéäèòå îáùóþ ñóììó ïðîäàæ è ñðåäíèé ïðîöåíò ñêèäêè ïî êàæäîé êàòåãîðèè ïðîäóêòà. Âûáåðèòå òîëüêî êàòåãîðèè, ãäå îáùàÿ ñóììà ïðîäàæ ïðåâûøàåò 50,000. 
Äîáàâüòå êàòåãîðèþ: "Top Category" äëÿ êàòåãîðèé ñ ñóììîé ïðîäàæ áîëåå 200,000, "Mid Category" äëÿ êàòåãîðèé ñ ñóììîé îò 100,000 äî 200,000 
è "Low Category" äëÿ âñåõ îñòàëüíûõ. Óêàæèòå êàòåãîðèþ, îáùóþ ñóììó ïðîäàæ, ñðåäíèé ïðîöåíò ñêèäêè è êàòåãîðèþ óðîâíÿ ïðîäàæ.
Èñïîëüçóéòå òàáëèöû Sales.SalesOrderDetail, Production.Product, Production.ProductSubcategory, è Production.ProductCategory.
SELECT ppc.Name
	  , SUM (sso.LineTotal) AS TotalSales
	  , AVG (sso.UnitPriceDiscount) AS AverageDiscount
	  , CASE
	   WHEN SUM (sso.LineTotal) > 200000 THEN 'Top Category'
	   WHEN SUM (sso.LineTotal) BETWEEN 100000 AND 200000 THEN 'Mid Category'
	   ELSE 'Low category'
	   END AS Category
FROM Sales.SalesOrderDetail sso
JOIN Production.Product pp ON pp.ProductID = sso.ProductID
JOIN Production.ProductSubcategory pps ON pps.ProductSubcategoryID = pp.ProductSubcategoryID
JOIN Production.ProductCategory ppc ON ppc.ProductCategoryID = pps.ProductCategoryID
GROUP BY ppc.Name
HAVING SUM (sso.LineTotal) > 50000
*/


/*Task 3
Ïîäñ÷èòàéòå ñðåäíþþ ñòîèìîñòü çàêàçà è îáùåå êîëè÷åñòâî çàêàçîâ ïî êàæäîìó ðåãèîíó (StateProvince). 
Âêëþ÷èòå òîëüêî ðåãèîíû, ãäå ñðåäíÿÿ ñòîèìîñòü çàêàçà ïðåâûøàåò 1500. Äîáàâüòå êàòåãîðèþ: 
"Expensive" äëÿ ðåãèîíîâ ñî ñðåäíåé ñòîèìîñòüþ çàêàçà âûøå 3000, "Moderate" äëÿ ñòîèìîñòè îò 2000 äî 3000 
è "Affordable" äëÿ îñòàëüíûõ. Óêàæèòå ðåãèîí, ñðåäíþþ ñòîèìîñòü çàêàçà, êîëè÷åñòâî çàêàçîâ è êàòåãîðèþ.
Èñïîëüçóéòå òàáëèöû Sales.SalesOrderHeader, Person.Address, è Person.StateProvince.
SELECT psp.Name
	  , AVG (sso.TotalDue) AS AverageCost
	  , COUNT (sso.SalesOrderID) AS AmountOFOrder
	  , CASE
	  WHEN AVG (sso.TotalDue) > 3000 THEN 'Expensive'
	  WHEN AVG (sso.TotalDue) BETWEEN 2000 AND 3000 THEN 'Moderate'
	  ELSE 'Affordable'
	  END AS Category
FROM Sales.SalesOrderHeader sso
JOIN Person.Address pa ON pa.AddressID = sso.ShipToAddressID
JOIN Person.StateProvince psp ON psp.StateProvinceID = pa.StateProvinceID
GROUP BY psp.Name
HAVING AVG(sso.TotalDue) > 1500*/


/*Task 4
Íàéäèòå ñðåäíèé ïðîöåíò ñêèäêè è êîëè÷åñòâî çàêàçîâ äëÿ êàæäîãî äíÿ íåäåëè. 
Âêëþ÷èòå òîëüêî òå äíè, ãäå êîëè÷åñòâî çàêàçîâ ïðåâûøàåò 100. Äîáàâüòå êàòåãîðèþ: 
"Peak Day" äëÿ äíåé ñ áîëåå ÷åì 300 çàêàçàìè, "High Traffic" äëÿ 200-300 çàêàçîâ è "Regular" äëÿ îñòàëüíûõ. 
Óêàæèòå äåíü íåäåëè, ñðåäíèé ïðîöåíò ñêèäêè, êîëè÷åñòâî çàêàçîâ è êàòåãîðèþ.
Èñïîëüçóéòå òàáëèöû Sales.SalesOrderHeader è Sales.SalesOrderDetail.

SELECT DATENAME (WEEKDAY, sh.OrderDate) AS WeekDay
	  , AVG (sd.UnitPriceDiscount) AS AverageDiscount
	  , COUNT (sh.SalesOrderID) AS AmountOFOrders
	  , CASE
	  WHEN COUNT (sh.SalesOrderID) > 300 THEN 'Peak Day'
	  WHEN COUNT (sh.SalesOrderID) BETWEEN 200 AND 300 THEN 'High Traffic'
	  ELSE 'Regular'
	  END AS Category
FROM Sales.SalesOrderHeader sh
JOIN Sales.SalesOrderDetail sd ON sd.SalesOrderID = sh.SalesOrderID
GROUP BY DATENAME (WEEKDAY, sh.OrderDate)
HAVING COUNT (sh.SalesOrderID) > 100*/


